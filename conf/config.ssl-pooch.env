# begin custom vars
# CUSTOM VARS - change it to match your needs
# you can also use a config file like PWD/conf/config.${0}.env - in such case, the file will have
# prevalence overs variables

# SSL WARNING - days to be considered warning, anything less than it
_warning_notice=30

# openssl proxy
_openssl_proxy=""

# whether to seek or not for local certs when endpoint is unreacheable
_seek_local_certs="true"
# _local_certs_path="PWD/cert_files"

# EMAIL VARS
# use alternative email mechanism thru telnet? if not set, sendmail will be used
# to be considered, this var should be set as: "true" "domain" "mailhost_addr" "mailhost_port"
_custom_mail_usealtmechanism=("false" "company.com" "mailhost.company.com" "25")
# recipient's email/s. split multi-addr with commas, as: addr1,addr2. 
_custom_mail_to="to@mail.com"
# sender's email
_custom_mail_from="${_my_name:0:9}@yourdomain.com"
# use different return path / reply-to?
_custom_mail_from_return_path="${_custom_mail_from}"
# email subject
_custom_mail_subject="${_my_name:0:9} - Certificate Expiration Monitor - $(date +%m-%d-%Y)"
# email signature - USE HTML code
_custom_mail_signature="<p>${_my_name} &#128054;</p>"
# custom email stylesheet for HTML emails - uncomment and change it by your will
# _custom_html_style=""

# OUTPUT SPECIFIC VARIABLES
# static fields names, when using it, obviously; as:
# where to position static fields 'begin' / 'end' 
_custom_static_fields_pos="begin"
# static fields names to be used on headers
_custom_static_fields_names=("Application" "Environment")

# CA WILY - apm metric path - to be used with correlated output
_custom_wily_metric_path="Infrastructure|$(hostname -s)|SSL:"

# DX APM - DX apm metric set as:
# agent, metric tree name, metric node
_custom_dxapm_metricset=("Infrastructure" "SSL|Validity")

# AWS CLOUDWATCH - cw namespace
_custom_cw_namespace="SSL Monitoring"

# STATSD - statsd metric name
_custom_statsd_metric_name="ssl.certificate,endpoint"

# GRAPHITE - graphite metric name
_custom_graphite_metric_name="infrastructure.ssl.certificate.days"

# ELASTICSEARCH APM - elasticsearch set as master_label, sample name
_custom_esapm_metricset=("infrastructure" "ssl")

# PROMETHEUS - metricset like - include metadata (true/false), metric name, label name
_custom_prometheus_metricset=("true" "ssl_certificate_validation" "endpoint")

# instrumentation endpoint 
_custom_instrumentation_addr="http://localhost:5001/metricfeed"
# send method / command
_custom_instrumentation_cmd="curl --silent -i -H \"Content-type: application/json\" -XPOST ${_custom_instrumentation_addr} --data-binary"
#
# end custom configs
